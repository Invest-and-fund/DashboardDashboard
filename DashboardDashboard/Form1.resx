<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAAsANsDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6qapqlpo+n3N7fXEVpZ26GSaedwiRqBksxPAAFWWbAr85v2
        wP2jdW8feKNU8Faf5mneHNJu3t54sgPeTxsVZnI/gDA7V+jHnAXswuFliqnItup4WcZtSyjD+2mryeiX
        d/5EX7TH7Wmp/ErXRpXhS8uNK8M6fcCSG4gZopryVGyspIIKqCMqvB6E84C/Rv7Kv7VVt8WLOPw54jkj
        tfF8EY2ScKmoqBy6jtIByy/iOMhfkP4E/sx+I/jnFfXltImk6RbI6pqFyhKSzgfLGo7jONx52jsScV55
        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
</value>
  </data>
</root>